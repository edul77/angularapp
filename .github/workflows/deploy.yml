name: Deploy Angular to EC2 with NGINX

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4

      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: üì¶ Install Dependencies
        run: npm ci

      - name: üèóÔ∏è Build Angular App
        run: npm run build -- --configuration production

      - name: üîé Debug dist folder
        run: ls -R dist/

      - name: üîë Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.JOBMATCH_EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.JOBMATCH_EC2_HOST }} >> ~/.ssh/known_hosts

      - name: üß∞ Install NGINX on EC2 (if not present)
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.JOBMATCH_EC2_USER }}@${{ secrets.JOBMATCH_EC2_HOST }} <<'EOF'
            set -e
            if ! command -v nginx &> /dev/null; then
              echo "NGINX not found. Installing..."
              sudo apt update -y
              sudo apt install -y nginx
              sudo systemctl enable nginx
            else
              echo "‚úÖ NGINX already installed."
            fi
          EOF

      - name: üóÇÔ∏è Ensure /var/www/jobmatch exists
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.JOBMATCH_EC2_USER }}@${{ secrets.JOBMATCH_EC2_HOST }} <<'EOF'
            set -e
            DEPLOY_DIR=/var/www/jobmatch
            if [ ! -d "$DEPLOY_DIR" ]; then
              echo "üìÅ Creating $DEPLOY_DIR ..."
              sudo mkdir -p $DEPLOY_DIR
              sudo chown -R www-data:www-data $DEPLOY_DIR
            else
              echo "‚úÖ Directory $DEPLOY_DIR already exists. Skipping creation."
            fi
          EOF

      - name: ‚öôÔ∏è Configure NGINX
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.JOBMATCH_EC2_USER }}@${{ secrets.JOBMATCH_EC2_HOST }} <<'EOF'
            set -e
            sudo tee /etc/nginx/sites-available/jobmatch > /dev/null <<'NGINX_CONF'
    
          server {
            listen 80;
            server_name campusvaultgh.com;

            root /var/www/jobmatch;
            index index.html;

            location / {
              try_files $uri $uri/ /index.html;
              }
          }
          
          NGINX_CONF

            sudo ln -sf /etc/nginx/sites-available/jobmatch /etc/nginx/sites-enabled/
            sudo nginx -t
            sudo systemctl restart nginx
          EOF

      - name: üì§ Copy Build Files to EC2
        run: |
          scp -i ~/.ssh/id_rsa -r dist/angularapp/browser/* \
          ${{ secrets.JOBMATCH_EC2_USER }}@${{ secrets.JOBMATCH_EC2_HOST }}:/tmp/angularapp/

          ssh -i ~/.ssh/id_rsa ${{ secrets.JOBMATCH_EC2_USER }}@${{ secrets.JOBMATCH_EC2_HOST }} <<'EOF'
            sudo chown -R www-data:www-data /var/www/jobmatch
            sudo mv /tmp/angularapp/* /var/www/jobmatch/
            sudo chown -R www-data:www-data /var/www/jobmatch/
            sudo find /var/www/jobmatch -type d -exec chmod 755 {} \;
            sudo find /var/www/jobmatch -type f -exec chmod 644 {} \;
          EOF

      - name: üîÑ Restart NGINX
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.JOBMATCH_EC2_USER }}@${{ secrets.JOBMATCH_EC2_HOST }} \
          'sudo systemctl restart nginx'
